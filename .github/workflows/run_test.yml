name: Test
on:
  pull_request:

    branches: [QA]

    types: [opened, synchronize, reopened]
jobs:  
  run-tests: 
    runs-on: ubuntu-latest
    env:
      QA_USERNAME: ${{ secrets.QA_USERNAME }}
      QA_CONSUMER_KEY: ${{ secrets.QA_CONSUMER_KEY }}

    steps:
      - name: Install Salesforce CLI
        run: |
          wget https://developer.salesforce.com/media/salesforce-cli/sfdx-linux-amd64.tar.xz
          mkdir sfdx-cli
          tar xJf sfdx-linux-amd64.tar.xz -C sfdx-cli --strip-components 1
          ./sfdx-cli/install
      - name: Checkout Develop source code
        uses: actions/checkout@v2
        with:
          ref: "QA"
          path: env
      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          path: QA
          
      # - name: Set environment variable
      #   run: |
      #     cat ./env/.github/workflows/env | grep DEV_CONSUMER_KEY= | grep -o '".*"' | sed 's/"//g' > ./main/DEV_CONSUMER_KEY
      #     cat ./env/.github/workflows/env | grep DEV_USERNAME= | grep -o '".*"' | sed 's/"//g' > ./main/DEV_USERNAME
      - name: Convert metadata to mdapi format
        run: |
          cd QA
          sfdx force:source:convert --sourcepath "force-app" --outputdir metadatadeploy
      - name: Authenticate Org
        shell: bash
        env:
          SALESFORCE_JWT_SECRET_KEY: ${{ secrets.QA_SECRET_KEY }}
        run: | 
          echo "${SALESFORCE_JWT_SECRET_KEY}" > server.key
          sfdx auth:jwt:grant -f ./server.key -a QAOrg -i ${{ secrets.QA_CONSUMER_KEY }} -u ${{ secrets.QA_USERNAME }} -r https://login.salesforce.com
      - name: Run tests
        run: |
          cd QA
          sfdx force:source:deploy -w 30 -c -l NoTestRun -u QAOrg --manifest metadatadeploy/package.xml --verbose 

